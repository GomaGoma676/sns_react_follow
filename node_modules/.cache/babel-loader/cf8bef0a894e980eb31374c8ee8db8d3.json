{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/embeddedtech/Desktop/untitled folder/src/App.js\";\nimport React from \"react\";\nimport styles from \"./App.module.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Auth from \"./components/Auth\";\nimport MainPage from \"./components/MainPage\";\nimport { setContext } from \"@apollo/client/link/context\";\nconst httpLink = createHttpLink({\n  uri: \"http://127.0.0.1:8000/graphql/\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: { ...headers,\n      authorization: token ? `JWT ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.app__root,\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Auth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/top\",\n            component: MainPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/embeddedtech/Desktop/untitled folder/src/App.js"],"names":["React","styles","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","Route","BrowserRouter","Switch","Auth","MainPage","setContext","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","app__root"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAGA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,OAAMA,KAAM,EAAhB,GAAoB;AAFjC;AADJ,GAAP;AAMD,CAR0B,CAA3B;AASA,MAAMI,MAAM,GAAG,IAAIlB,YAAJ,CAAiB;AAC9BmB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADwB;AAE9BY,EAAAA,KAAK,EAAE,IAAInB,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMoB,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEJ,MAAxB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEpB,MAAM,CAACyB,SAAvB;AAAA,6BACE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAEjB;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,MAAlB;AAAyB,YAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAMe,G;AAeN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./App.module.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Auth from \"./components/Auth\";\nimport MainPage from \"./components/MainPage\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://127.0.0.1:8000/graphql/\",\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : \"\",\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <div className={styles.app__root}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Auth} />\n            <Route exact path=\"/top\" component={MainPage} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}