{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/embeddedtech/Desktop/sns_react_follow/src/components/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport FlipCameraAndroidIcon from \"@material-ui/icons/FlipCameraAndroid\";\nimport { GET_TOKEN, CREATE_USER, CREATE_PROFILE } from \"../queries\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Auth = () => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [getToken] = useMutation(GET_TOKEN);\n  const [createUser] = useMutation(CREATE_USER);\n  const [createProfile] = useMutation(CREATE_PROFILE);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const login = async () => {\n    try {\n      const result = await getToken({\n        variables: {\n          username: username,\n          password: password\n        }\n      });\n      localStorage.setItem(\"token\", result.data.tokenAuth.token);\n\n      if (!isLogin) {\n        await createProfile();\n      }\n\n      history.push(\"/top\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const authUser = async e => {\n    e.preventDefault();\n\n    if (isLogin) {\n      login();\n    } else {\n      try {\n        await createUser({\n          variables: {\n            username: username,\n            password: password\n          }\n        });\n        login();\n      } catch (err) {\n        alert(err.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.auth,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: authUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.auth__input,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.auth__input,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isLogin ? \"Login with JWT\" : \"Create new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FlipCameraAndroidIcon, {\n          className: styles.auth__toggle,\n          onClick: () => setIsLogin(!isLogin)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"hxd2sDvDOEvZex9QDV3+3CEV+xA=\", false, function () {\n  return [useHistory, useMutation, useMutation, useMutation];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/embeddedtech/Desktop/sns_react_follow/src/components/Auth.js"],"names":["React","useState","styles","FlipCameraAndroidIcon","GET_TOKEN","CREATE_USER","CREATE_PROFILE","useMutation","useHistory","Auth","history","username","setUsername","password","setPassword","getToken","createUser","createProfile","isLogin","setIsLogin","login","result","variables","localStorage","setItem","data","tokenAuth","token","push","err","alert","message","authUser","e","preventDefault","auth","auth__input","target","value","auth__toggle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport FlipCameraAndroidIcon from \"@material-ui/icons/FlipCameraAndroid\";\nimport { GET_TOKEN, CREATE_USER, CREATE_PROFILE } from \"../queries\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Auth = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [getToken] = useMutation(GET_TOKEN);\n  const [createUser] = useMutation(CREATE_USER);\n  const [createProfile] = useMutation(CREATE_PROFILE);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const login = async () => {\n    try {\n      const result = await getToken({\n        variables: { username: username, password: password },\n      });\n      localStorage.setItem(\"token\", result.data.tokenAuth.token);\n      if (!isLogin) {\n        await createProfile();\n      }\n      history.push(\"/top\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const authUser = async (e) => {\n    e.preventDefault();\n    if (isLogin) {\n      login();\n    } else {\n      try {\n        await createUser({\n          variables: { username: username, password: password },\n        });\n        login();\n      } catch (err) {\n        alert(err.message);\n      }\n    }\n  };\n\n  return (\n    <div className={styles.auth}>\n      <form onSubmit={authUser}>\n        <div className={styles.auth__input}>\n          <label>Username: </label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </div>\n        <div className={styles.auth__input}>\n          <label>Password: </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">\n          {isLogin ? \"Login with JWT\" : \"Create new user\"}\n        </button>\n        <div>\n          <FlipCameraAndroidIcon\n            className={styles.auth__toggle}\n            onClick={() => setIsLogin(!isLogin)}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}