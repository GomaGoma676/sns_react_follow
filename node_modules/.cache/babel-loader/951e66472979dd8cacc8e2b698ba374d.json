{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/embeddedtech/Desktop/sns_react_follow/src/App.js\";\nimport React from \"react\";\nimport styles from \"./App.module.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Auth from \"./components/Auth\";\nimport MainPage from \"./components/MainPage\";\nimport { setContext } from \"@apollo/client/link/context\";\nconst httpLink = createHttpLink({\n  uri: \"http://127.0.0.1:8000/graphql/\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: { ...headers,\n      authorization: token ? `JWT ${token}` : \"\"\n    }\n  };\n});\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/embeddedtech/Desktop/sns_react_follow/src/App.js"],"names":["React","styles","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","Route","BrowserRouter","Switch","Auth","MainPage","setContext","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,QAAQ,GAAGR,cAAc,CAAC;AAC9BS,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAGA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,OAAMA,KAAM,EAAhB,GAAoB;AAFjC;AADJ,GAAP;AAMD,CAR0B,CAA3B;;AAUA,MAAMI,GAAG,GAAG,MAAM;AAChB,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMA,G;AAIN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./App.module.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Auth from \"./components/Auth\";\nimport MainPage from \"./components/MainPage\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://127.0.0.1:8000/graphql/\",\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : \"\",\n    },\n  };\n});\n\nconst App = () => {\n  return <div className=\"App\"></div>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}