{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/embeddedtech/Desktop/sns_react_follow/src/components/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport FlipCameraAndroidIcon from \"@material-ui/icons/FlipCameraAndroid\";\nimport { GET_TOKEN, CREATE_USER, CREATE_PROFILE } from \"../queries\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Auth = () => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [getToken] = useMutation(GET_TOKEN);\n  const [createUser] = useMutation(CREATE_USER);\n  const [createProfile] = useMutation(CREATE_PROFILE);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const login = async () => {\n    try {\n      const result = await getToken({\n        variables: {\n          username: username,\n          password: password\n        }\n      });\n      localStorage.setItem(\"token\", result.data.tokenAuth.token);\n\n      if (!isLogin) {\n        await createProfile();\n      }\n\n      history.push(\"/top\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Auth\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Auth, \"hxd2sDvDOEvZex9QDV3+3CEV+xA=\", false, function () {\n  return [useHistory, useMutation, useMutation, useMutation];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/embeddedtech/Desktop/sns_react_follow/src/components/Auth.js"],"names":["React","useState","styles","FlipCameraAndroidIcon","GET_TOKEN","CREATE_USER","CREATE_PROFILE","useMutation","useHistory","Auth","history","username","setUsername","password","setPassword","getToken","createUser","createProfile","isLogin","setIsLogin","login","result","variables","localStorage","setItem","data","tokenAuth","token","push","err","alert","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,cAAjC,QAAuD,YAAvD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,QAAD,IAAaR,WAAW,CAACH,SAAD,CAA9B;AACA,QAAM,CAACY,UAAD,IAAeT,WAAW,CAACF,WAAD,CAAhC;AACA,QAAM,CAACY,aAAD,IAAkBV,WAAW,CAACD,cAAD,CAAnC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMmB,KAAK,GAAG,YAAY;AACxB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMN,QAAQ,CAAC;AAC5BO,QAAAA,SAAS,EAAE;AAAEX,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBE,UAAAA,QAAQ,EAAEA;AAAhC;AADiB,OAAD,CAA7B;AAGAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACI,IAAP,CAAYC,SAAZ,CAAsBC,KAApD;;AACA,UAAI,CAACT,OAAL,EAAc;AACZ,cAAMD,aAAa,EAAnB;AACD;;AACDP,MAAAA,OAAO,CAACkB,IAAR,CAAa,MAAb;AACD,KATD,CASE,OAAOC,GAAP,EAAY;AACZC,MAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD;AACF,GAbD;;AAeA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzBD;;GAAMtB,I;UACYD,U,EAGGD,W,EACEA,W,EACGA,W;;;KANpBE,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Auth.module.css\";\nimport FlipCameraAndroidIcon from \"@material-ui/icons/FlipCameraAndroid\";\nimport { GET_TOKEN, CREATE_USER, CREATE_PROFILE } from \"../queries\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Auth = () => {\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [getToken] = useMutation(GET_TOKEN);\n  const [createUser] = useMutation(CREATE_USER);\n  const [createProfile] = useMutation(CREATE_PROFILE);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const login = async () => {\n    try {\n      const result = await getToken({\n        variables: { username: username, password: password },\n      });\n      localStorage.setItem(\"token\", result.data.tokenAuth.token);\n      if (!isLogin) {\n        await createProfile();\n      }\n      history.push(\"/top\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  return <div>Auth</div>;\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}